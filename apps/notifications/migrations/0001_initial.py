# Generated by Django 4.2 on 2025-05-18 04:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('referral_status', 'Referral Status Update'), ('referral_comment', 'Referral Comment'), ('document_upload', 'Document Upload'), ('document_status', 'Document Status Update'), ('chapter_event', 'Chapter Event'), ('service_update', 'Service Update'), ('system_announcement', 'System Announcement'), ('account_update', 'Account Update')], max_length=50)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('object_id', models.CharField(blank=True, max_length=255, null=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('channels_attempted', models.JSONField(default=list)),
                ('channels_delivered', models.JSONField(default=list)),
                ('email_sent', models.BooleanField(default=False)),
                ('push_sent', models.BooleanField(default=False)),
                ('sms_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(choices=[('referral_status', 'Referral Status Update'), ('referral_comment', 'Referral Comment'), ('document_upload', 'Document Upload'), ('document_status', 'Document Status Update'), ('chapter_event', 'Chapter Event'), ('service_update', 'Service Update'), ('system_announcement', 'System Announcement'), ('account_update', 'Account Update')], max_length=50)),
                ('subject_template', models.CharField(help_text='Subject template with variables like {user.name}', max_length=255)),
                ('body_template', models.TextField(help_text='Body template with variables')),
                ('html_template', models.TextField(blank=True, help_text='HTML template for emails')),
                ('push_title_template', models.CharField(blank=True, max_length=100)),
                ('push_body_template', models.CharField(blank=True, max_length=255)),
                ('sms_template', models.CharField(blank=True, max_length=160)),
                ('variables', models.JSONField(default=list, help_text='List of available template variables')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App'), ('push', 'Push Notification'), ('sms', 'SMS')], max_length=20)),
                ('priority', models.IntegerField(default=0, help_text='Higher numbers = higher priority')),
                ('scheduled_for', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queue_items', to='notifications.notification')),
            ],
            options={
                'ordering': ['priority', 'scheduled_for'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('enabled_types', models.JSONField(default=dict, help_text='Dictionary of notification types and their enabled status')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediate', max_length=20)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='Asia/Manila', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App'), ('push', 'Push Notification'), ('sms', 'SMS')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('bounced', 'Bounced')], default='pending', max_length=20)),
                ('metadata', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['is_processed', 'scheduled_for'], name='notificatio_is_proc_47f939_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['channel', 'is_processed'], name='notificatio_channel_b757e3_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read', 'created_at'], name='notificatio_user_id_8a7c6b_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['type', 'created_at'], name='notificatio_type_8e213d_idx'),
        ),
    ]
