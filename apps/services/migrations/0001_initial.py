# Generated by Django 4.2 on 2025-05-18 04:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('chapters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_number', models.CharField(max_length=20, unique=True)),
                ('beneficiary_is_self', models.BooleanField(default=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=200)),
                ('beneficiary_relationship', models.CharField(blank=True, max_length=100)),
                ('beneficiary_contact', models.CharField(blank=True, max_length=100)),
                ('household_size', models.PositiveSmallIntegerField(default=1)),
                ('household_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reason_for_application', models.TextField()),
                ('supporting_details', models.TextField(blank=True)),
                ('priority_level', models.CharField(choices=[('urgent', 'Urgent'), ('high', 'High'), ('normal', 'Normal'), ('low', 'Low')], default='normal', max_length=10)),
                ('assessment_notes', models.TextField(blank=True)),
                ('home_visit_required', models.BooleanField(default=False)),
                ('home_visit_completed', models.BooleanField(default=False)),
                ('home_visit_report', models.TextField(blank=True)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='application_documents/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('waitlisted', 'Waitlisted'), ('withdrawn', 'Withdrawn')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('assistance_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('assistance_description', models.TextField(blank=True)),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('disbursement_method', models.CharField(blank=True, max_length=100)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_notes', models.TextField(blank=True)),
                ('notion_id', models.CharField(blank=True, help_text='Notion database ID', max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_applications', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('program_type', models.CharField(choices=[('educational', 'Educational Support'), ('health', 'Healthcare Services'), ('livelihood', 'Livelihood Assistance'), ('emergency', 'Emergency Relief'), ('infrastructure', 'Community Infrastructure'), ('social', 'Social Services'), ('youth', 'Youth Development'), ('elderly', 'Senior Citizen Support'), ('pwd', 'PWD Assistance'), ('other', 'Other Services')], max_length=20)),
                ('description', models.TextField()),
                ('objectives', models.TextField()),
                ('eligibility_criteria', models.TextField()),
                ('required_documents', models.TextField()),
                ('target_beneficiaries', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('application_start', models.DateField(blank=True, null=True)),
                ('application_end', models.DateField(blank=True, null=True)),
                ('total_budget', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('funding_source', models.CharField(blank=True, max_length=200)),
                ('max_beneficiaries', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('planning', 'Planning'), ('completed', 'Completed'), ('suspended', 'Suspended')], default='planning', max_length=20)),
                ('partner_agencies', models.TextField(blank=True)),
                ('partner_organizations', models.TextField(blank=True)),
                ('program_guidelines', models.FileField(blank=True, null=True, upload_to='program_guidelines/')),
                ('application_form', models.FileField(blank=True, null=True, upload_to='program_forms/')),
                ('beneficiary_count', models.PositiveIntegerField(default=0)),
                ('budget_utilized', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notion_id', models.CharField(blank=True, help_text='Notion database ID', max_length=36)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('coordinator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coordinated_programs', to=settings.AUTH_USER_MODEL)),
                ('implementing_chapters', models.ManyToManyField(blank=True, related_name='programs', to='chapters.chapter')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='published_programs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceDisbursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('check', 'Check'), ('bank_transfer', 'Bank Transfer'), ('gcash', 'GCash'), ('in_kind', 'In-Kind'), ('voucher', 'Voucher')], max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('recipient_name', models.CharField(max_length=200)),
                ('recipient_id_type', models.CharField(blank=True, max_length=50)),
                ('recipient_id_number', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('scheduled_date', models.DateField()),
                ('actual_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='disbursement_receipts/')),
                ('supporting_docs', models.FileField(blank=True, null=True, upload_to='disbursement_docs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disbursements', to='services.serviceapplication')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_disbursements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.AddField(
            model_name='serviceapplication',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='services.serviceprogram'),
        ),
        migrations.AddField(
            model_name='serviceapplication',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ServiceImpact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField()),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_beneficiaries', models.PositiveIntegerField(default=0)),
                ('direct_beneficiaries', models.PositiveIntegerField(default=0)),
                ('indirect_beneficiaries', models.PositiveIntegerField(default=0)),
                ('municipalities_served', models.TextField()),
                ('barangays_served', models.TextField()),
                ('total_disbursed', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_assistance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('success_stories', models.TextField(blank=True)),
                ('challenges_faced', models.TextField(blank=True)),
                ('lessons_learned', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('impact_photos', models.FileField(blank=True, null=True, upload_to='impact_photos/')),
                ('detailed_report', models.FileField(blank=True, null=True, upload_to='impact_reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prepared_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='impact_reports_prepared', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='impact_reports', to='services.serviceprogram')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='impact_reports_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-report_date'],
                'unique_together': {('program', 'period_start', 'period_end')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='serviceapplication',
            unique_together={('program', 'applicant')},
        ),
    ]
