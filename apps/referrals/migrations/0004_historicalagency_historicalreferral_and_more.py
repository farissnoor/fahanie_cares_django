# Generated by Django 4.2.7 on 2025-05-28 10:04

from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('referrals', '0003_service_is_featured'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalAgency',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notion_id', models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('abbreviation', models.CharField(blank=True, max_length=20)),
                ('ministry', models.CharField(blank=True, db_index=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('contact_person', models.CharField(blank=True, max_length=255)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('address', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('logo', models.TextField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('contact_info', models.JSONField(blank=True, default=dict, help_text='Additional contact information')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical agency',
                'verbose_name_plural': 'historical Agencies',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReferral',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notion_id', models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36)),
                ('reference_number', models.CharField(db_index=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Reference number must be in format REF-YYYYMMDD-NNNN', regex='^REF-\\d{8}-\\d{4}$')])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('reviewing', 'Under Review'), ('processing', 'Processing'), ('referred', 'Referred to Agency'), ('approved', 'Approved'), ('denied', 'Denied'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, default='draft', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], db_index=True, default='medium', max_length=10)),
                ('description', models.TextField(help_text='Describe the specific need or request')),
                ('supporting_documents', models.JSONField(blank=True, default=list, help_text='List of supporting documents provided')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional metadata for the referral')),
                ('staff_notes', models.TextField(blank=True)),
                ('agency_notes', models.TextField(blank=True)),
                ('agency_contact', models.CharField(blank=True, max_length=255)),
                ('agency_reference', models.CharField(blank=True, help_text='Reference number at the agency', max_length=100)),
                ('submitted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('referred_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('follow_up_date', models.DateField(blank=True, db_index=True, null=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical referral',
                'verbose_name_plural': 'historical referrals',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReferralDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notion_id', models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('file', models.TextField(max_length=100)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('document_type', models.CharField(choices=[('id_document', 'ID Document'), ('proof_of_income', 'Proof of Income'), ('medical_certificate', 'Medical Certificate'), ('barangay_certificate', 'Barangay Certificate'), ('application_form', 'Application Form'), ('supporting_document', 'Supporting Document'), ('other', 'Other')], db_index=True, default='supporting_document', max_length=50)),
                ('is_verified', models.BooleanField(db_index=True, default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical referral document',
                'verbose_name_plural': 'historical referral documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReferralUpdate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notion_id', models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('reviewing', 'Under Review'), ('processing', 'Processing'), ('referred', 'Referred to Agency'), ('approved', 'Approved'), ('denied', 'Denied'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, max_length=20)),
                ('notes', models.TextField()),
                ('update_type', models.CharField(choices=[('status_change', 'Status Change'), ('comment', 'Comment'), ('document_added', 'Document Added'), ('assignment', 'Assignment Change'), ('follow_up', 'Follow-up')], db_index=True, default='status_change', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical referral update',
                'verbose_name_plural': 'historical referral updates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalService',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notion_id', models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField()),
                ('eligibility_criteria', models.JSONField(blank=True, default=dict, help_text='Structured eligibility criteria')),
                ('required_documents', models.JSONField(blank=True, default=list, help_text='List of required documents')),
                ('application_process', models.TextField(blank=True)),
                ('processing_time', models.CharField(blank=True, max_length=100)),
                ('fees', models.CharField(blank=True, max_length=100)),
                ('contact_info', models.TextField(blank=True)),
                ('website_link', models.URLField(blank=True)),
                ('form_link', models.URLField(blank=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('is_featured', models.BooleanField(db_index=True, default=False, help_text='Show this service on the homepage')),
                ('slug', models.SlugField(max_length=255)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical service',
                'verbose_name_plural': 'historical services',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServiceCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, db_index=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('notion_id', models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='FontAwesome icon class', max_length=50)),
                ('slug', models.SlugField(max_length=100)),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical service category',
                'verbose_name_plural': 'historical Service Categories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.DeleteModel(
            name='Category',
        ),
        migrations.RemoveField(
            model_name='referraldocument',
            name='uploaded_by',
        ),
        migrations.AddField(
            model_name='agency',
            name='contact_info',
            field=models.JSONField(blank=True, default=dict, help_text='Additional contact information'),
        ),
        migrations.AddField(
            model_name='agency',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agency',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='agency',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agency',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='agency',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referral',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referral',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='referral',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referral',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='referral',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Additional metadata for the referral'),
        ),
        migrations.AddField(
            model_name='referral',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='referral',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='document_type',
            field=models.CharField(choices=[('id_document', 'ID Document'), ('proof_of_income', 'Proof of Income'), ('medical_certificate', 'Medical Certificate'), ('barangay_certificate', 'Barangay Certificate'), ('application_form', 'Application Form'), ('supporting_document', 'Supporting Document'), ('other', 'Other')], db_index=True, default='supporting_document', max_length=50),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='file_size',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='file_type',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='is_verified',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='verified_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='referraldocument',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='metadata',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='update_type',
            field=models.CharField(choices=[('status_change', 'Status Change'), ('comment', 'Comment'), ('document_added', 'Document Added'), ('assignment', 'Assignment Change'), ('follow_up', 'Follow-up')], db_index=True, default='status_change', max_length=20),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='referralupdate',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='service',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='service',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='service',
            name='search_vector',
            field=django.contrib.postgres.search.SearchVectorField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='service',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='deleted_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='deleted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='is_deleted',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='servicecategory',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='agency',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='agency',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='agency',
            name='ministry',
            field=models.CharField(blank=True, db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='agency',
            name='name',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='agency',
            name='notion_id',
            field=models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36),
        ),
        migrations.AlterField(
            model_name='referral',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='referral',
            name='follow_up_date',
            field=models.DateField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='referral',
            name='notion_id',
            field=models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36),
        ),
        migrations.AlterField(
            model_name='referral',
            name='priority',
            field=models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], db_index=True, default='medium', max_length=10),
        ),
        migrations.AlterField(
            model_name='referral',
            name='reference_number',
            field=models.CharField(db_index=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Reference number must be in format REF-YYYYMMDD-NNNN', regex='^REF-\\d{8}-\\d{4}$')]),
        ),
        migrations.AlterField(
            model_name='referral',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('reviewing', 'Under Review'), ('processing', 'Processing'), ('referred', 'Referred to Agency'), ('approved', 'Approved'), ('denied', 'Denied'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, default='draft', max_length=20),
        ),
        migrations.AlterField(
            model_name='referral',
            name='submitted_at',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='referral',
            name='supporting_documents',
            field=models.JSONField(blank=True, default=list, help_text='List of supporting documents provided'),
        ),
        migrations.AlterField(
            model_name='referraldocument',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='referraldocument',
            name='name',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='referraldocument',
            name='notion_id',
            field=models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36),
        ),
        migrations.AlterField(
            model_name='referralupdate',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='referralupdate',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='referralupdate',
            name='notion_id',
            field=models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36),
        ),
        migrations.AlterField(
            model_name='referralupdate',
            name='status',
            field=models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('reviewing', 'Under Review'), ('processing', 'Processing'), ('referred', 'Referred to Agency'), ('approved', 'Approved'), ('denied', 'Denied'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='service',
            name='contact_info',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='service',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='eligibility_criteria',
            field=models.JSONField(blank=True, default=dict, help_text='Structured eligibility criteria'),
        ),
        migrations.AlterField(
            model_name='service',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='is_featured',
            field=models.BooleanField(db_index=True, default=False, help_text='Show this service on the homepage'),
        ),
        migrations.AlterField(
            model_name='service',
            name='name',
            field=models.CharField(db_index=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='service',
            name='notion_id',
            field=models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36),
        ),
        migrations.AlterField(
            model_name='service',
            name='required_documents',
            field=models.JSONField(blank=True, default=list, help_text='List of required documents'),
        ),
        migrations.AlterField(
            model_name='servicecategory',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='servicecategory',
            name='name',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='servicecategory',
            name='notion_id',
            field=models.CharField(blank=True, db_index=True, help_text='Notion database ID for this record', max_length=36),
        ),
        migrations.AlterField(
            model_name='servicecategory',
            name='order',
            field=models.PositiveIntegerField(db_index=True, default=0),
        ),
        migrations.AddIndex(
            model_name='agency',
            index=models.Index(fields=['name'], name='referrals_a_name_b1b545_idx'),
        ),
        migrations.AddIndex(
            model_name='agency',
            index=models.Index(fields=['ministry'], name='referrals_a_ministr_74212f_idx'),
        ),
        migrations.AddIndex(
            model_name='agency',
            index=models.Index(fields=['is_active'], name='referrals_a_is_acti_73a4f7_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['reference_number'], name='referrals_r_referen_6c5a34_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['constituent'], name='referrals_r_constit_582e28_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['service'], name='referrals_r_service_7defa5_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['status'], name='referrals_r_status_50a3e5_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['priority'], name='referrals_r_priorit_bf044d_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['assigned_to'], name='referrals_r_assigne_fb931a_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['submitted_at'], name='referrals_r_submitt_79a83c_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['follow_up_date'], name='referrals_r_follow__4ae939_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['-created_at'], name='referrals_r_created_ba3fe4_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='referrals_r_search__a462f6_gin'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=django.contrib.postgres.indexes.GinIndex(fields=['supporting_documents'], name='referrals_r_support_808c3d_gin'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=django.contrib.postgres.indexes.GinIndex(fields=['metadata'], name='referrals_r_metadat_40f283_gin'),
        ),
        migrations.AddIndex(
            model_name='referraldocument',
            index=models.Index(fields=['referral', '-created_at'], name='referrals_r_referra_b3eb6f_idx'),
        ),
        migrations.AddIndex(
            model_name='referraldocument',
            index=models.Index(fields=['document_type'], name='referrals_r_documen_ae3925_idx'),
        ),
        migrations.AddIndex(
            model_name='referraldocument',
            index=models.Index(fields=['is_verified'], name='referrals_r_is_veri_680f63_idx'),
        ),
        migrations.AddIndex(
            model_name='referralupdate',
            index=models.Index(fields=['referral', '-created_at'], name='referrals_r_referra_f28cba_idx'),
        ),
        migrations.AddIndex(
            model_name='referralupdate',
            index=models.Index(fields=['status'], name='referrals_r_status_727203_idx'),
        ),
        migrations.AddIndex(
            model_name='referralupdate',
            index=models.Index(fields=['update_type'], name='referrals_r_update__fc9a17_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['name'], name='referrals_s_name_d3c40a_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['category'], name='referrals_s_categor_a18a01_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['agency'], name='referrals_s_agency__a0739d_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_active'], name='referrals_s_is_acti_1cd097_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_featured'], name='referrals_s_is_feat_a0a5bc_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='referrals_s_search__a252ac_gin'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=django.contrib.postgres.indexes.GinIndex(fields=['eligibility_criteria'], name='referrals_s_eligibi_fcdbbc_gin'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=django.contrib.postgres.indexes.GinIndex(fields=['required_documents'], name='referrals_s_require_7aa60e_gin'),
        ),
        migrations.AddIndex(
            model_name='servicecategory',
            index=models.Index(fields=['order', 'name'], name='referrals_s_order_7be2f8_idx'),
        ),
        migrations.AddIndex(
            model_name='servicecategory',
            index=models.Index(fields=['parent'], name='referrals_s_parent__0d8972_idx'),
        ),
        migrations.AddIndex(
            model_name='servicecategory',
            index=models.Index(fields=['is_active'], name='referrals_s_is_acti_37943a_idx'),
        ),
        migrations.AddField(
            model_name='historicalservicecategory',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservicecategory',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservicecategory',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservicecategory',
            name='parent',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='referrals.servicecategory'),
        ),
        migrations.AddField(
            model_name='historicalservicecategory',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='agency',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='referrals.agency'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='category',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='referrals.servicecategory'),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalservice',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferralupdate',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferralupdate',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferralupdate',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferralupdate',
            name='referral',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='referrals.referral'),
        ),
        migrations.AddField(
            model_name='historicalreferralupdate',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferraldocument',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferraldocument',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferraldocument',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferraldocument',
            name='referral',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='referrals.referral'),
        ),
        migrations.AddField(
            model_name='historicalreferraldocument',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferraldocument',
            name='verified_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='assigned_to',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='constituent',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='service',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='referrals.service'),
        ),
        migrations.AddField(
            model_name='historicalreferral',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalagency',
            name='created_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalagency',
            name='deleted_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalagency',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalagency',
            name='updated_by',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
    ]
